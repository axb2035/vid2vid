# render passes
# these values are split by .
# eg. RenderPass.[RENDER PASS TYPE]
# where [RENDER PASS TYPE] is the render pass that will run
# valid render passes are 
#   comfyui
#       Runs comfyui
#
#       InputDir = directory 
#           files that will be processed by comfyui
#       VideoDir = path 
#           Video files to be uploaded along with InputDir files. Useful for controlnet for example.
#           Required only if UploadVideoFile is enabled.
#       OutputDir = path
#           Where files will be stored after comfyui has run
#       SkipFrames = 123
#           How many frames to skip between runs. Recommended 5-8 in the first few passes and lower later.
#
#       Values sent to comfyui can be overridden here
#       For example if you want to override the workflow this current pass runs on you can specify it as:
#       Workflow = workflows/my_workflow_override_api.json
#       
#       You can overwrite any value in the workflow api json by simply having a line in the comfyui render pass such as
#       comfyuiparam.sampler.denoise = 0.69
#       
#       The comfyui param values are dot separated. For example:
#       comfyuiparam.sampler.denoise = 0.5 is split into 3 values. comfyuiparam, sampler, denoise
#       
# 		comfyuiparam  ## This marks the line as a comfyui parameter
#       sampler       ## This is the title of the node this input value is a part of
#       denoise       ## The value that will be changed. This has to match one of the node inputs in json.
#
#       Example:
#       If you would like to change the input image of the example workflow.
#
#       This is the input image node in workflow_api.json
#       "10": {
#           "title": "input_image",
#           "inputs": {
#               "image": "input.png",
#               "choose file to upload": "image"
#           },
#           "class_type": "LoadImage"
#       },
#       To change the input image from "input.png" to "this_example.png" you can add 
#       comfyuiparam.input_image.image = this_example.png
# 		to your comfyui render pass like so:
#
#       [RenderPass.comfyui]
#       comfyuiparam.input_image.image = this_example.png
#
#       All of the comfyui parameters are optional and up to you to add when creating custom workflows
#
#       If none of these seem to do anything make sure you have modified your comfyui app.js before exporting api.json! Read the README for information about that.
#       
#   alpha_blend
#       Runs alpha blend, BlendDir files will be "pasted" on top of InputDir with specified alpha.
#
#       InputDir = path
#           Files that will be overlayed on top of, think bottom layer in photoshop
#       BlendDir = path
#           Files to overlay on top of InputDir, think top layer in photoshop
#       OutputDir = path
#           Where files will be stored after alpha blending
#       Alpha = 1.0
#           How opaque will the VideoDir file be. 0 being fully transpaent and 1 being fully opaque (Recommend 0.5 for the first few passes and gradually lower per pass)
#
#   ebsynth_blend
#       Runs ebsynth and blends ebsynth generated frames on top of current frames
#       How this works is that it will generate frames based on stylized frames. Then if it's currently working on frame 1 it will pick any ebsynth generated frame 1s. So if ebsynth has generated another frame 1 from going backwards from frame 10 it will use that.
#       Alpha is then multiplied depending on the distance to generated frame source.
#
#       InputDir = path
#           Stylized files for ebsynth to morph (keyframes in ebsynth)
#       VideoDir = path
#           Source video for ebsynth (video in ebsynth)
#       OutputDir = path
#           where files will be stored after ebsynth
#       FrameSpread = 123
#           How many frames will ebsynth run forward/backward per frame
#       ForwardOnly = yes/no
#           Changes ebsynth to only generate frames forward
#       SkipFrames = 123
#           How many frames to skip between runs. Use higher values if there's not a lot of movement in the video. Lower values if there is a lot of movement.
#       Alpha = 1.0
#           How opaque should the resulting frame blending be. Recommended: 0.9
#       PingPong = yes
#           Runs ebsynth forward from first frame and backwards from last.
#           Setting this to true will ignore SkipFrames and FrameSpread.
#
#   Utilities:
#   del_files
#       Dir = path
#           Deletes given directory
#   copy_files
#       Copies directory and files in it, limited to .png for now.
#
#       From = what files to copy
#       To = where to copy to
#
#   Common:
#       WaitForUserInput
#           Adding this to a render pass will cause it to wait for the user to press enter after the render pass has finished


# Extra prompts can be declared like this
[ExtraPrompt]
# Frames this prompt will affect. Comma separated. You can define ranges x-y where all frames between x and y are affected. Frame order doesn't matter.
Frames = 12, 15-19, 1, 2, 3
extra_comfyuiparam.positive_prompt.text = mushroom, wild, fungus, monster, 
extra_comfyuiparam.negative_prompt.text = human, tame, casual, 


# Example render passes:
# These will run sequentially from top to bottom

# ${Whatever} are interpolation values (read more: https://docs.python.org/3/library/configparser.html#interpolation-of-values)

# clean workspace
[RenderPass.del_files]
Dir = ${TempDir}
[RenderPass.del_files]
Dir = ${OutputDir}

# copy video files to temp directory
[RenderPass.copy_files]
From = ${VideoDir}
To = ${TempDir}

# run comfyui
[RenderPass.comfyui]
comfyuiparam.loader.ckpt_name = ${Model}
comfyuiparam.positive_prompt.text = ${PositivePrompt}
comfyuiparam.negative_prompt.text = ${NegativePrompt}
comfyuiparam.sampler.seed = ${Seed}
comfyuiparam.sampler.denoise = 0.5

# run ebsynth
[RenderPass.ebsynth_blend]
Alpha = 0.9

# alpha blend video back on top to reinforce it in next comfyui pass
[RenderPass.alpha_blend]
BlendDir = ${VideoDir}
Alpha = 0.4

# run comfyui
[RenderPass.comfyui]
comfyuiparam.loader.ckpt_name = ${Model}
comfyuiparam.positive_prompt.text = ${PositivePrompt}
comfyuiparam.negative_prompt.text = ${NegativePrompt}
comfyuiparam.sampler.seed = ${Seed}
comfyuiparam.sampler.denoise = 0.3

# NOTE:
# I highly recommend adding more passes here before copying the files to FinalDir
# The output will look like garbage with just 2 runs of comfyui. This requires anywhere from 6-10 passes to fully work properly.

# copy output to final
[RenderPass.copy_files]
From = ${OutputDir}
To = ${FinalDir}

# cleanup
[RenderPass.del_files]
Dir = ${OutputDir}
[RenderPass.del_files]
Dir = ${TempDir}
[RenderPass.del_files]
Dir = ${EbsynthDir}